<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.omg.mpro">
<resultMap type="MProcess" id="dto">
<result property="projectId" column="PROJECT_ID"/>
<result property="projectName" column="PROJECT_NAME"/>
<result property="startDate" column="START_DATE"/>
<result property="endDate" column="END_DATE"/>
<result property="tech" column="TECH_ID"/>
<result property="techName" column="TECH_NAME"/>
<result property="teamId" column="TEAM_ID"/>
<result property="departmentId" column="DEPARTMENT_ID"/>
<result property="employeeId" column="employee_id"/>
<result property="employeeName" column="NAME"/>
<result property="phone" column="PHONE"/>
<result property="email" column="EMAIL"/>
<result property="positionName" column="POSITION_NAME"/>
<result property="salary" column="salary"/>
<result property="teamName" column="team_name"/>
<result property="price" column="project_price"/>
</resultMap>

<!--현재 프로젝트 리스트  -->
<select id="relist" resultMap="dto" parameterType="String">
<![CDATA[ 	select * from employees e, project_emp pe, projects pro, project_tech prote, techs tech
where pe.employee_id= e.employee_id
and pe.project_id = pro.project_id
and prote.project_id = pro.project_id
and prote.tech_id = tech.tech_id
and e.employee_id= #{employeeId}
and sysdate >= start_date and sysdate <= end_date
and pro.approval = 'O']]>
</select>

<!--현재 프로젝트 동료리스트  -->
<select id="colist" resultMap="dto" parameterType="String">

select * from project_emp pe, employees e, position po, projects pro
where pe.EMPLOYEE_ID=e.EMPLOYEE_ID and pe.project_id = pro.project_id
and e.position_id=po.position_id
and pro.project_id = #{priId}
and pro.approval = 'O'


</select>
<!--전에한 프로젝트리스트  -->
<select id="exlist" resultMap="dto" parameterType="String">
<![CDATA[ select * 
from employees e, project_emp pe, projects pro, project_tech prote, techs tech
where pe.employee_id= e.employee_id
and pe.project_id = pro.project_id
and prote.project_id = pro.project_id
and prote.tech_id = tech.tech_id
and e.employee_id= #{employeeId}
and sysdate >= end_date
and pro.approval = 'O']]>
</select>

<!--잉여리스트  -->
<select id="sparelist" resultMap="dto">

select * from employees e, position p
where e.POSITION_ID = p.POSITION_ID
and e.team_id = #{teamId}
and not exists(
select * from projects p , project_emp pe, employees emp, position pos
where p.project_id = pe.project_id and pe.employee_id = emp.employee_id and pos.position_id = emp.position_id  
and p.project_id = #{projectId}
and emp.employee_id = e.employee_id
)
order by p.position_id

</select>

<!--투입인원 찾기  -->
<select id="putlist" resultMap="dto" parameterType="String">
<![CDATA[
select *
from projects p , project_emp pe, employees e,position pos
where p.project_id = pe.project_id and pe.employee_id = e.employee_id and pos.position_id = e.position_id  
and p.project_id = #{projectId}
]]>
</select>


<!--시작될 프로젝트 알리기  -->
<select id="startpro" resultMap="dto" parameterType="String">
<![CDATA[ 
select * from DEPARTMENTS dept, PROJECTS pro, EMPLOYEES emp
where emp.EMPLOYEE_ID = dept.DEPARTMENT_MANAGER
and pro.DEPARTMENT_ID = dept.DEPARTMENT_ID
and pro.approval = 'O'
and pro.TEAM_ID = #{teamId}
and pro.START_DATE>=sysdate
]]>
</select>



<!--눌렀을때 view리스트 보여주기  -->
<select id="view" resultMap="dto" parameterType = "String">
<![CDATA[ 
select * from DEPARTMENTS dept, PROJECTS pro, EMPLOYEES emp
where emp.EMPLOYEE_ID = dept.DEPARTMENT_MANAGER
and pro.DEPARTMENT_ID = dept.DEPARTMENT_ID
and pro.approval = 'O'
and pro.project_id = #{proId}
and pro.START_DATE>=sysdate
]]>
</select>



<!--인원 투입하기  -->
<insert id="setpeople" parameterType="String">
insert into project_emp
values(#{proId},#{empId})
</insert>


<!--인원 삭제하기  -->
<delete id="delete" parameterType="String">
delete from project_emp
where project_id=#{proId}
and employee_id =#{empId}
</delete>


<!--부장이 프로젝트 진행중인거 머잇나 보는 리스트  -->
<select id="proing" resultMap="dto">
<![CDATA[ select * from projects pro, teams t
where END_DATE >= sysdate
and START_DATE <= sysdate
and pro.TEAM_ID = t.TEAM_ID
and pro.TEAM_ID like 'M%' ]]>
</select>


<select id="team" resultMap="dto">
select * from teams
where team_id like 'M%'
</select>

<update id="setTeam" parameterType="String">
update projects
set TEAM_ID = #{teamId}
where PROJECT_ID = #{projectId}
</update>


<!--부장용 스타트 프로젝트  -->
<select id="startProjects" resultMap="dto" parameterType="String">
<![CDATA[ select * from DEPARTMENTS dept, PROJECTS pro, EMPLOYEES emp, project_tech prote, techs tech
where emp.EMPLOYEE_ID = dept.DEPARTMENT_MANAGER
and pro.DEPARTMENT_ID = dept.DEPARTMENT_ID
and prote.project_id = pro.project_id
and prote.tech_id = tech.tech_id
and pro.approval = 'O'
and pro.TEAM_ID is null
and pro.START_DATE>=sysdate
and emp.EMPLOYEE_ID = #{employeeId} ]]>
</select>


<update id="fk" parameterType="String">

UPDATE projects SET team_id = null 
WHERE project_id = #{proId}
</update>



</mapper>